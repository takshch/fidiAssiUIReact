{"ast":null,"code":"var _jsxFileName = \"/home/taksh/Desktop/fidisys-assignment/fidisysAssiAPI/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listData: [],\n      tempListData: [],\n      isListLoading: true,\n      errorMessage: \"\",\n      message: \"\",\n      messageClass: \"\",\n      currentPrice: null,\n      currentName: \"\",\n      prevPrice: null\n    };\n    this.fetchList = this.fetchList.bind(this);\n  }\n\n  async fetchList() {\n    try {\n      const url = \"https://fidisys-api.herokuapp.com/items\";\n      const response = await fetch(url);\n      let data = await response.json();\n      this.setState({\n        listData: data\n      }, () => {\n        this.setState({\n          isListLoading: false\n        });\n      });\n    } catch (error) {\n      this.setState({\n        errorMessage: \"Unable to fetch data\",\n        isListLoading: false\n      });\n    }\n  }\n\n  async componentDidMount() {\n    this.fetchList();\n  }\n\n  async iconTouchClick(e) {\n    let id = e.target.parentNode.parentNode.parentNode.getAttribute(\"data-id\");\n    if (id === null) id = e.target.parentNode.getAttribute(\"data-id\");\n    let postBody = JSON.stringify({\n      id: parseInt(id)\n    });\n    console.log(id);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: postBody\n    };\n\n    try {\n      const response = await fetch('https://fidisys-api.herokuapp.com/delete', requestOptions);\n      let data = await response.json();\n      console.log(\"data:\", data);\n\n      if (data['status'] === \"deleted\" && data['error'] === null) {\n        this.setState({\n          message: \"Successfully deleted the item\",\n          messageClass: \"success\"\n        });\n      } else if (data['error']) {\n        this.setState({\n          message: data['error'],\n          messageClass: \"dark\"\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      this.setState({\n        message: \"Can't detete items\",\n        messageClass: \"dark\"\n      });\n    }\n\n    this.fetchList();\n    setTimeout(() => {\n      this.setState({\n        message: \"\",\n        messageClass: \"\"\n      });\n    }, 13000);\n  }\n\n  async addItem(e) {\n    let parent = e.target.parentNode.childNodes;\n    let name = parent[0].value;\n    let price = parent[1].value;\n    console.log(`name: ${name}, price: ${price}`);\n\n    if (name !== \"\" && price !== \"\" && !isNaN(price)) {\n      let postBody = JSON.stringify({\n        name,\n        price: parseInt(price)\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: postBody\n      };\n\n      try {\n        const response = await fetch('https://fidisys-api.herokuapp.com/add', requestOptions);\n        let data = await response.json();\n        console.log(\"data:\", data);\n\n        if (data['status'] === \"success\" && data['error'] === null) {\n          this.setState({\n            message: \"Successfully deleted the item\",\n            messageClass: \"success\"\n          });\n        } else if (data['error']) {\n          this.setState({\n            message: data['error'],\n            messageClass: \"dark\"\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          message: \"Can't add item\",\n          messageClass: \"dark\"\n        });\n      }\n\n      this.fetchList();\n      setTimeout(() => {\n        this.setState({\n          message: \"\",\n          messageClass: \"\"\n        });\n      }, 10000);\n    } else if (name === \"\" || price === \"\" || isNaN(price)) {\n      this.setState({\n        message: \"name and price can't be empty or price must be number\",\n        messageClass: \"dark\"\n      });\n    } else {\n      this.setState({\n        message: \"price\",\n        messageClass: \"dark\"\n      });\n    }\n\n    setTimeout(() => {\n      this.setState({\n        message: \"\",\n        messageClass: \"\"\n      });\n    }, 4000);\n  }\n\n  async updateItem(price, id) {\n    let postBody = JSON.stringify({\n      price: parseInt(price),\n      id: parseInt(id)\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: postBody\n    };\n\n    try {\n      const response = await fetch('https://fidisys-api.herokuapp.com/update', requestOptions);\n      let data = await response.json();\n      console.log(\"data:\", data);\n\n      if (data['status'] === \"success\" && data['error'] === null) {\n        this.setState({\n          message: \"Successfully updated the item\",\n          messageClass: \"success\"\n        });\n      } else if (data['error']) {\n        this.setState({\n          message: data['error'],\n          messageClass: \"dark\"\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      this.setState({\n        message: \"Can't update item\",\n        messageClass: \"dark\"\n      });\n    }\n\n    this.fetchList();\n    setTimeout(() => {\n      this.setState({\n        message: \"\",\n        messageClass: \"\"\n      });\n    }, 10000);\n  }\n\n  setCurrentName(e) {\n    this.setState({\n      currentName: e.target.value\n    });\n  }\n\n  setCurrentPrice(e) {\n    console.log(\"e:\", isNaN(e.target.value));\n\n    if (isNaN(e.target.value)) {\n      alert(\"Price Can't be character\");\n      e.target.setAttribute(\"value\", \"\");\n    } else {\n      this.setState({\n        currentPrice: parseInt(e.target.value)\n      });\n    }\n  }\n\n  parFocus(val) {\n    if (val.target.innerText !== \"\" && !isNaN(val.target.innerText)) {\n      this.setState({\n        prevPrice: parseInt(val.target.innerText)\n      });\n      console.log(\"focus:\", val.target.innerText);\n    }\n  }\n\n  parBlur(e) {\n    let id = e.target.parentNode.getAttribute(\"data-id\");\n    let value = e.target.innerText;\n    console.log(value);\n\n    if (value === \"\" && this.state.prevPrice !== null) {\n      console.log(\"okay\");\n      e.target.innerText = value;\n      this.setState({\n        prevPrice: null\n      });\n    } else if (!isNaN(value) && value !== \"\" && id !== \"\" && !isNaN(id)) {\n      this.updateItem(parseInt(value), parseInt(id));\n    }\n  }\n\n  parPriceChange(e) {\n    let price = e.target.innerText;\n\n    if (price !== \"\" && !isNaN(price)) {\n      alert(\"Price Can't be character\");\n      e.target.inner(\"value\", \"\");\n    } else {\n      this.setState({\n        currentPrice: parseInt(price)\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.listData);\n    let wrapperList;\n\n    if (Array.isArray(this.state.listData) && this.state.listData.length !== 0) {\n      wrapperList = this.state.listData.map(val => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(WrappedList, {\n          key: val.id,\n          \"data-id\": val.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }\n        }, val.name), /*#__PURE__*/React.createElement(\"p\", {\n          contentEditable: \"true\",\n          onClick: this.parFocus.bind(this),\n          onFocus: this.parFocus.bind(this),\n          onBlur: this.parBlur.bind(this),\n          onChange: this.setCurrentPrice.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }\n        }, val.price), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"btn\",\n          onTouch: this.iconTouchClick.bind(this),\n          onClick: this.iconTouchClick.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTrash,\n          color: \"#fcbf49\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }\n        }))));\n      });\n    } else wrapperList = /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"There is no data\");\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        \"min-height\": \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"8\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ColOutWrapper, {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ColInnerWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, \"CRUD APPLICATION\"), /*#__PURE__*/React.createElement(AddWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter product name\",\n      onChange: this.setCurrentName.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter price\",\n      onChange: this.setCurrentPrice.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add\",\n      onClick: this.addItem.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, this.state.message !== \"\" ? /*#__PURE__*/React.createElement(Alert, {\n      variant: this.state.messageClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 38\n      }\n    }, this.state.message) : \"\", this.state.errorMessage !== \"\" ? /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 55\n      }\n    }, this.state.errorMessage) : \"\", this.state.isListLoading ? /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 49\n      }\n    }, \"Loading....\") : wrapperList)))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(APIStory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, \"API ENDPOINTS:\"), /*#__PURE__*/React.createElement(Command, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, \"\\\"/items\\\"  --  to get data of all items\"), /*#__PURE__*/React.createElement(Command, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, \"\\\"/add\\\"    --  to add item with name and price\"), /*#__PURE__*/React.createElement(Command, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \"\\\"/update\\\" --  to edit price of exiting item with id\"), /*#__PURE__*/React.createElement(Command, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, \"\\\"/delete\\\" -- to delete item with id\"))))));\n  }\n\n}\nconst Command = styled.div`\n  padding: 5px 10px;\n  border-radius: 6px;\n  margin: 20px auto;\n  font-size: 1.05rem;\n  border: 1px solid #e5e5e5;\n  background: #edf2f4;\n  background-color: #edf2f4;\n  color: rgba(0,0,0,0.8);\n  :nth-of-type(1){\n    margin-top: 5px;\n  }\n`;\nconst APIStory = styled.div`\n   padding: 0px 15px; \n   padding-top: 30px;\n   height:  100%;\n   background: #f1faee;\n   backgrond-color: #f1faee;\n`;\nconst WrappedList = styled.div`\n  // background: #0566d;\n  background: #264653;\n  margin: 10px auto;\n  padding: 8px 10px;\n  font-size: 1rem;\n  border-radius: 4px;\n  display: flex;\n  > *{\n    flex: 1;\n    flex-shrink: 0;\n  }\n  > span:nth-of-type(1){\n    font-size: 1.13rem;\n    margin: auto;\n    margin-left: 10px;\n  }\n  > span:nth-of-type(1){\n    border-right: 2px solid #fff;\n  }\n  >span:nth-of-type(2){\n   flex: 0; \n  }\n  >span:nth-of-type(2):hover{\n    cursor: pointer;\n  }\n  >span:nth-of-type(2):active > svg{\n    color: #e63946;\n  }\n  > p{ \n    flex: auto;\n    margin: auto 5px;\n    margin-left: 10px; \n    border:none;\n    outline: none;\n    background: inherit;\n    background-color: inherit;\n    color: inherit;\n  }\n`;\nconst AddWrapper = styled.div`\n  margin: 30px auto;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  font-size: 1.05rem;\n  color: #fff;\n  box-shadow: 1px 1px 44px -12px rgba(255,255,255,0.6);\n  background: #ef476f;\n  > input {\n    border: none;\n    background: inherit;\n    outline: none;\n    color: #fff;\n    padding-left: 10px;\n    margin: auto 5px;\n  }\n  > input::placeholder{\n    color: #fff;\n  }\n  > input:nth-child(1){\n    border-right: 2px solid #fdfffc;\n  }\n  > input[type=\"submit\"]{\n    min-width: 80px;\n    border: none; \n    outline: none;\n    background: #fca311;\n    padding: 3px 0px;\n    background-color: #fca311;\n    border-radius: 4px;\n    box-shadow: 1px 1px 0px 1px rgba(0,0,0,0.05);\n    color:#fff;\n  }\n  >  input[type=\"submit\"]:active{\n      box-shadow: 2px 2px 0px 1px rgba(0,0,0,0.05),-2px -2px 0px 1px rgba(0,0,0,0.05);\n      background: #ff9f1c;\n  }\n`;\nconst ColOutWrapper = styled.div`\n  background: #2ec4b6;\n  background-color: #2ec4b6;\n  color: #fff;\n  font-size: 1.3  rem;\n  font-weight: 500;\n  height: 100%;\n  // padding-top: 20px;\n`;\nconst ColInnerWrapper = styled.div`\n  margin: 10px;\n  margin-top: 30px;\n`;","map":{"version":3,"sources":["/home/taksh/Desktop/fidisys-assignment/fidisysAssiAPI/src/App.js"],"names":["React","ReactDOM","Container","Row","Col","Alert","styled","faTrash","faCheck","FontAwesomeIcon","App","Component","constructor","props","state","listData","tempListData","isListLoading","errorMessage","message","messageClass","currentPrice","currentName","prevPrice","fetchList","bind","url","response","fetch","data","json","setState","error","componentDidMount","iconTouchClick","e","id","target","parentNode","getAttribute","postBody","JSON","stringify","parseInt","console","log","requestOptions","method","headers","body","setTimeout","addItem","parent","childNodes","name","value","price","isNaN","updateItem","setCurrentName","setCurrentPrice","alert","setAttribute","parFocus","val","innerText","parBlur","parPriceChange","inner","render","wrapperList","Array","isArray","length","map","Command","div","APIStory","WrappedList","AddWrapper","ColOutWrapper","ColInnerWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { faTrash, faCheck} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {listData: [],\n                  tempListData: [],\n                  isListLoading: true,\n                  errorMessage: \"\",\n                  message: \"\",\n                  messageClass: \"\",\n                  currentPrice: null,\n                  currentName: \"\",\n                  prevPrice: null\n                };\n    this.fetchList = this.fetchList.bind(this);\n  }\n  async fetchList(){\n    try{\n      const url = \"https://fidisys-api.herokuapp.com/items\";\n      const response = await fetch(url);\n      let data = await response.json();\n      this.setState({listData: data},()=>{\n        this.setState({isListLoading: false});\n      });\n    }catch(error){\n      this.setState({errorMessage: \"Unable to fetch data\",isListLoading: false});\n    }  \n  }\n  async componentDidMount(){\n    this.fetchList();\n  }\n  \n  async iconTouchClick(e){  \n    let id = e.target.parentNode.parentNode.parentNode.getAttribute(\"data-id\");\n    if(id === null)\n      id = e.target.parentNode.getAttribute(\"data-id\");\n    let postBody = JSON.stringify({ id: parseInt(id)});\n    console.log(id);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: postBody\n    };\n    try{\n      const response = await fetch('https://fidisys-api.herokuapp.com/delete', requestOptions)\n      let data = await response.json();\n      console.log(\"data:\",data);\n      if(data['status'] === \"deleted\" && data['error'] === null){\n        this.setState({message: \"Successfully deleted the item\",messageClass: \"success\"});\n      }else if(data['error']){\n        this.setState({message: data['error'],messageClass: \"dark\"});\n      }\n    }catch(error){\n      console.log(error);\n      this.setState({message: \"Can't detete items\",messageClass: \"dark\"});\n    }\n    this.fetchList();\n    setTimeout(()=>{\n      this.setState({message: \"\",messageClass: \"\"});\n    },13000);\n  }\n\n\n  async addItem(e){\n    let parent = e.target.parentNode.childNodes;\n    let name = parent[0].value;\n    let price  = parent[1].value;\n    console.log(`name: ${name}, price: ${price}`);\n    if(name !== \"\" && price !== \"\" && !isNaN(price)){\n      let postBody  = JSON.stringify({name,price: parseInt(price)});\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: postBody\n      };\n      try{\n        const response = await fetch('https://fidisys-api.herokuapp.com/add', requestOptions)\n        let data = await response.json();\n        console.log(\"data:\",data);\n        if(data['status'] === \"success\" && data['error'] === null){\n          this.setState({message: \"Successfully deleted the item\",messageClass: \"success\"});\n        }else if(data['error']){\n          this.setState({message: data['error'],messageClass: \"dark\"});\n        }\n      }catch(error){\n        console.log(error);\n        this.setState({message: \"Can't add item\",messageClass: \"dark\"});\n      }\n      this.fetchList();\n      setTimeout(()=>{\n        this.setState({message: \"\",messageClass: \"\"});\n      },10000);\n    }else if(name === \"\" || price === \"\" || isNaN(price)){\n      this.setState({message: \"name and price can't be empty or price must be number\",messageClass: \"dark\"});\n    }else{\n      this.setState({message: \"price\",messageClass: \"dark\"});\n    }\n    setTimeout(()=>{\n      this.setState({message: \"\",messageClass: \"\"});\n    },4000);\n  }\n\n\n  async updateItem(price,id){\n    let postBody  = JSON.stringify({price: parseInt(price),id: parseInt(id)});\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: postBody\n    };\n    try{\n      const response = await fetch('https://fidisys-api.herokuapp.com/update', requestOptions)\n      let data = await response.json();\n      console.log(\"data:\",data);\n      if(data['status'] === \"success\" && data['error'] === null){\n        this.setState({message: \"Successfully updated the item\",messageClass: \"success\"});\n      }else if(data['error']){\n        this.setState({message: data['error'],messageClass: \"dark\"});\n      }\n    }catch(error){\n      console.log(error);\n      this.setState({message: \"Can't update item\",messageClass: \"dark\"});\n    }\n    this.fetchList();\n    setTimeout(()=>{\n      this.setState({message: \"\",messageClass: \"\"});\n    },10000);\n  }\n\n  setCurrentName(e){\n    this.setState({currentName: e.target.value});\n  }\n\n  setCurrentPrice(e){\n    console.log(\"e:\",isNaN(e.target.value));\n    if(isNaN(e.target.value)){\n      alert(\"Price Can't be character\");\n      e.target.setAttribute(\"value\",\"\");\n    }else{\n      this.setState({currentPrice: parseInt(e.target.value)});\n    }\n  }\n\n  parFocus(val){\n    if(val.target.innerText !== \"\" && !isNaN(val.target.innerText)){\n      this.setState({prevPrice: parseInt(val.target.innerText)});\n      console.log(\"focus:\",val.target.innerText);\n    }\n  }\n\n  parBlur(e){\n    let id = e.target.parentNode.getAttribute(\"data-id\");\n    let value = e.target.innerText;\n    console.log(value);\n    if(value === \"\" && this.state.prevPrice !== null){\n      console.log(\"okay\");\n      e.target.innerText = value;\n      this.setState({prevPrice: null});      \n    }else if(!isNaN(value) && value !== \"\" && id !== \"\" && !isNaN(id)){\n      this.updateItem(parseInt(value),parseInt(id));\n    }\n  }\n  \n  parPriceChange(e){\n    let price = e.target.innerText;\n    if(price !== \"\" && !isNaN(price)){\n      alert(\"Price Can't be character\");\n      e.target.inner(\"value\",\"\");\n    }else{\n      this.setState({currentPrice: parseInt(price)});\n    }\n  }\n\n\n  render(){\n    console.log(this.state.listData);\n    let wrapperList;\n    if(Array.isArray(this.state.listData) && this.state.listData.length !== 0){\n      wrapperList = this.state.listData.map((val)=>{  \n        return (<React.Fragment>\n            <WrappedList key={val.id} data-id={val.id}>\n              <span>{val.name}</span>\n              <p contentEditable=\"true\"\n                onClick={this.parFocus.bind(this)}\n                onFocus={this.parFocus.bind(this)}\n                onBlur={this.parBlur.bind(this)}\n              onChange={this.setCurrentPrice.bind(this)}>{val.price}</p>\n              <span className=\"btn\" onTouch={this.iconTouchClick.bind(this)}\n               onClick={this.iconTouchClick.bind(this)}>\n                <FontAwesomeIcon  icon={faTrash} color=\"#fcbf49\"/></span>\n            </WrappedList>\n        </React.Fragment>);\n      });\n    }else wrapperList = <h4 className=\"text-center\">There is no data</h4>;\n\n    return (<React.Fragment>\n      <Container fluid>\n          <Row style={{\"min-height\": \"100vh\"}}>\n            <Col lg=\"8\" className=\"p-0\">\n              <ColOutWrapper className=\"d-flex justify-content-center\">\n                 <ColInnerWrapper>\n                  <h4 className=\"text-center\">CRUD APPLICATION</h4>\n                  <AddWrapper>\n                    <input type=\"text\" placeholder=\"Enter product name\"\n                      onChange={this.setCurrentName.bind(this)}/>\n                    <input type=\"text\" placeholder=\"Enter price\"\n                      onChange={this.setCurrentPrice.bind(this)}/>\n                    <input type=\"submit\" value=\"Add\" onClick={this.addItem.bind(this)}/>\n                  </AddWrapper>\n                  <div>\n        {this.state.message !== \"\" ? <Alert variant={this.state.messageClass}>{this.state.message}</Alert> : \"\"}\n                    {this.state.errorMessage !== \"\" ? <h4 className=\"text-center\">{this.state.errorMessage}</h4>: \"\"}\n                    {this.state.isListLoading ? <h4 className=\"text-center\">Loading....</h4> : wrapperList}\n                  </div>\n                 </ColInnerWrapper>\n              </ColOutWrapper>\n            </Col>\n            <Col lg=\"4\" className=\"p-0\">\n              <APIStory>\n                <h4>API ENDPOINTS:</h4>\n                <Command>\"/items\"  --  to get data of all items</Command>\n                <Command>\"/add\"    --  to add item with name and price</Command>\n                <Command>\"/update\" --  to edit price of exiting item with id</Command>\n                <Command>\"/delete\" -- to delete item with id</Command>\n              </APIStory>\n            </Col>\n          </Row>\n      </Container>\n    </React.Fragment>);\n  }\n}\n\nconst Command =  styled.div`\n  padding: 5px 10px;\n  border-radius: 6px;\n  margin: 20px auto;\n  font-size: 1.05rem;\n  border: 1px solid #e5e5e5;\n  background: #edf2f4;\n  background-color: #edf2f4;\n  color: rgba(0,0,0,0.8);\n  :nth-of-type(1){\n    margin-top: 5px;\n  }\n`;\n\nconst APIStory = styled.div`\n   padding: 0px 15px; \n   padding-top: 30px;\n   height:  100%;\n   background: #f1faee;\n   backgrond-color: #f1faee;\n`;\n\n\n\n\nconst WrappedList = styled.div`\n  // background: #0566d;\n  background: #264653;\n  margin: 10px auto;\n  padding: 8px 10px;\n  font-size: 1rem;\n  border-radius: 4px;\n  display: flex;\n  > *{\n    flex: 1;\n    flex-shrink: 0;\n  }\n  > span:nth-of-type(1){\n    font-size: 1.13rem;\n    margin: auto;\n    margin-left: 10px;\n  }\n  > span:nth-of-type(1){\n    border-right: 2px solid #fff;\n  }\n  >span:nth-of-type(2){\n   flex: 0; \n  }\n  >span:nth-of-type(2):hover{\n    cursor: pointer;\n  }\n  >span:nth-of-type(2):active > svg{\n    color: #e63946;\n  }\n  > p{ \n    flex: auto;\n    margin: auto 5px;\n    margin-left: 10px; \n    border:none;\n    outline: none;\n    background: inherit;\n    background-color: inherit;\n    color: inherit;\n  }\n`;\n\nconst AddWrapper = styled.div`\n  margin: 30px auto;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  font-size: 1.05rem;\n  color: #fff;\n  box-shadow: 1px 1px 44px -12px rgba(255,255,255,0.6);\n  background: #ef476f;\n  > input {\n    border: none;\n    background: inherit;\n    outline: none;\n    color: #fff;\n    padding-left: 10px;\n    margin: auto 5px;\n  }\n  > input::placeholder{\n    color: #fff;\n  }\n  > input:nth-child(1){\n    border-right: 2px solid #fdfffc;\n  }\n  > input[type=\"submit\"]{\n    min-width: 80px;\n    border: none; \n    outline: none;\n    background: #fca311;\n    padding: 3px 0px;\n    background-color: #fca311;\n    border-radius: 4px;\n    box-shadow: 1px 1px 0px 1px rgba(0,0,0,0.05);\n    color:#fff;\n  }\n  >  input[type=\"submit\"]:active{\n      box-shadow: 2px 2px 0px 1px rgba(0,0,0,0.05),-2px -2px 0px 1px rgba(0,0,0,0.05);\n      background: #ff9f1c;\n  }\n`;\n\nconst ColOutWrapper = styled.div`\n  background: #2ec4b6;\n  background-color: #2ec4b6;\n  color: #fff;\n  font-size: 1.3  rem;\n  font-weight: 500;\n  height: 100%;\n  // padding-top: 20px;\n`;\nconst ColInnerWrapper = styled.div`\n  margin: 10px;\n  margin-top: 30px;\n`;\n\n"]},"metadata":{},"sourceType":"module"}